Grammar

    0 $accept: program $end

    1 program: KPROGRAM KIDENT ';' declarations sub_declarations comp_stmt

    2 declarations: declarations KVAR ident_list ':' type ';'
    3             | /* empty */

    4 ident_list: KIDENT
    5           | ident_list ',' KIDENT

    6 type: std_type
    7     | KARRAY '[' KINTNUM '..' KINTNUM ']' KOF std_type

    8 std_type: KINT
    9         | KREAL
   10         | KBOOL

   11 sub_declarations: sub_declarations sub_dec ';'
   12                 | /* empty */

   13 @1: /* empty */

   14 sub_dec: sub_head @1 local_dec comp_stmt

   15 sub_head: KFUNC KIDENT args ':' std_type ';'
   16         | KPROC KIDENT args ';'

   17 args: '(' param_list ')'
   18     | /* empty */

   19 param_list: ident_list ':' type
   20           | param_list ';' ident_list ':' type

   21 local_dec: local_dec KVAR ident_list ':' type ';'
   22          | /* empty */

   23 comp_stmt: KBEGIN optional_stmts KEND

   24 optional_stmts: stmt_list
   25               | /* empty */

   26 stmt_list: stmt
   27          | stmt_list ';' stmt

   28 stmt: variable KASSIGN exp
   29     | proc_stmt
   30     | comp_stmt
   31     | KIF exp KTHEN stmt
   32     | KIF exp KTHEN stmt KELSE stmt
   33     | KWHILE exp KDO stmt

   34 variable: KIDENT
   35         | KIDENT '[' exp ']'

   36 proc_stmt: KIDENT
   37          | KIDENT '(' exp_list ')'

   38 exp_list: exp
   39         | exp_list ',' exp

   40 exp: KIDENT
   41    | KINTNUM
   42    | KREALNUM
   43    | KTRUE
   44    | KFALSE
   45    | KIDENT '(' exp_list ')'
   46    | '(' exp ')'
   47    | exp binOp exp
   48    | KNOT exp

   49 binOp: KADD
   50      | KSUB
   51      | KMULT
   52      | KDIVIDE
   53      | KMOD
   54      | KGT
   55      | KGE
   56      | KLT
   57      | KLE
   58      | KET
   59      | KNE
   60      | KAND
   61      | KOR


Terminals, with rules where they appear

$end (0) 0
'(' (40) 17 37 45 46
')' (41) 17 37 45 46
',' (44) 5 39
'..' (46) 7
':' (58) 2 15 19 20 21
';' (59) 1 2 11 15 16 20 21 27
'[' (91) 7 35
']' (93) 7 35
error (256)
KINT (258) 8
KREAL (259) 9
KBOOL (260) 10
KFUNC (261) 15
KPROC (262) 16
KWHILE (263) 33
KARRAY (264) 7
KIDENT (265) 1 4 5 15 16 34 35 36 37 40 45
KINTNUM (266) 7 41
KREALNUM (267) 42
KTRUE (268) 43
KFALSE (269) 44
KPROGRAM (270) 1
KVAR (271) 2 21
KDO (272) 33
KBEGIN (273) 23
KEND (274) 23
KIF (275) 31 32
KTHEN (276) 31 32
KELSE (277) 32
KOF (278) 7
KMOD (279) 53
KNOT (280) 48
KOR (281) 61
KAND (282) 60
KASSIGN (283) 28
KGT (284) 54
KLT (285) 56
KGE (286) 55
KLE (287) 57
KET (288) 58
KNE (289) 59
KMULT (290) 51
KADD (291) 49
KSUB (292) 50
KDIVIDE (293) 52
IF_PREC (294)
BINOP (295)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
declarations (51)
    on left: 2 3, on right: 1 2
ident_list (52)
    on left: 4 5, on right: 2 5 19 20 21
type (53)
    on left: 6 7, on right: 2 19 20 21
std_type (54)
    on left: 8 9 10, on right: 6 7 15
sub_declarations (55)
    on left: 11 12, on right: 1 11
sub_dec (56)
    on left: 14, on right: 11
@1 (57)
    on left: 13, on right: 14
sub_head (58)
    on left: 15 16, on right: 14
args (59)
    on left: 17 18, on right: 15 16
param_list (60)
    on left: 19 20, on right: 17 20
local_dec (61)
    on left: 21 22, on right: 14 21
comp_stmt (62)
    on left: 23, on right: 1 14 30
optional_stmts (63)
    on left: 24 25, on right: 23
stmt_list (64)
    on left: 26 27, on right: 24 27
stmt (65)
    on left: 28 29 30 31 32 33, on right: 26 27 31 32 33
variable (66)
    on left: 34 35, on right: 28
proc_stmt (67)
    on left: 36 37, on right: 29
exp_list (68)
    on left: 38 39, on right: 37 39 45
exp (69)
    on left: 40 41 42 43 44 45 46 47 48, on right: 28 31 32 33 35 38
    39 46 47 48
binOp (70)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61,
    on right: 47


state 0

    0 $accept: . program $end

    KPROGRAM  shift, and go to state 1

    program  go to state 2


state 1

    1 program: KPROGRAM . KIDENT ';' declarations sub_declarations comp_stmt

    KIDENT  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: KPROGRAM KIDENT . ';' declarations sub_declarations comp_stmt

    ';'  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: KPROGRAM KIDENT ';' . declarations sub_declarations comp_stmt

    $default  reduce using rule 3 (declarations)

    declarations  go to state 6


state 6

    1 program: KPROGRAM KIDENT ';' declarations . sub_declarations comp_stmt
    2 declarations: declarations . KVAR ident_list ':' type ';'

    KVAR  shift, and go to state 7

    $default  reduce using rule 12 (sub_declarations)

    sub_declarations  go to state 8


state 7

    2 declarations: declarations KVAR . ident_list ':' type ';'

    KIDENT  shift, and go to state 9

    ident_list  go to state 10


state 8

    1 program: KPROGRAM KIDENT ';' declarations sub_declarations . comp_stmt
   11 sub_declarations: sub_declarations . sub_dec ';'

    KFUNC   shift, and go to state 11
    KPROC   shift, and go to state 12
    KBEGIN  shift, and go to state 13

    sub_dec    go to state 14
    sub_head   go to state 15
    comp_stmt  go to state 16


state 9

    4 ident_list: KIDENT .

    $default  reduce using rule 4 (ident_list)


state 10

    2 declarations: declarations KVAR ident_list . ':' type ';'
    5 ident_list: ident_list . ',' KIDENT

    ':'  shift, and go to state 17
    ','  shift, and go to state 18


state 11

   15 sub_head: KFUNC . KIDENT args ':' std_type ';'

    KIDENT  shift, and go to state 19


state 12

   16 sub_head: KPROC . KIDENT args ';'

    KIDENT  shift, and go to state 20


state 13

   23 comp_stmt: KBEGIN . optional_stmts KEND

    KWHILE  shift, and go to state 21
    KIDENT  shift, and go to state 22
    KBEGIN  shift, and go to state 13
    KIF     shift, and go to state 23

    $default  reduce using rule 25 (optional_stmts)

    comp_stmt       go to state 24
    optional_stmts  go to state 25
    stmt_list       go to state 26
    stmt            go to state 27
    variable        go to state 28
    proc_stmt       go to state 29


state 14

   11 sub_declarations: sub_declarations sub_dec . ';'

    ';'  shift, and go to state 30


state 15

   14 sub_dec: sub_head . @1 local_dec comp_stmt

    $default  reduce using rule 13 (@1)

    @1  go to state 31


state 16

    1 program: KPROGRAM KIDENT ';' declarations sub_declarations comp_stmt .

    $default  reduce using rule 1 (program)


state 17

    2 declarations: declarations KVAR ident_list ':' . type ';'

    KINT    shift, and go to state 32
    KREAL   shift, and go to state 33
    KBOOL   shift, and go to state 34
    KARRAY  shift, and go to state 35

    type      go to state 36
    std_type  go to state 37


state 18

    5 ident_list: ident_list ',' . KIDENT

    KIDENT  shift, and go to state 38


state 19

   15 sub_head: KFUNC KIDENT . args ':' std_type ';'

    '('  shift, and go to state 39

    $default  reduce using rule 18 (args)

    args  go to state 40


state 20

   16 sub_head: KPROC KIDENT . args ';'

    '('  shift, and go to state 39

    $default  reduce using rule 18 (args)

    args  go to state 41


state 21

   33 stmt: KWHILE . exp KDO stmt

    KIDENT    shift, and go to state 42
    KINTNUM   shift, and go to state 43
    KREALNUM  shift, and go to state 44
    KTRUE     shift, and go to state 45
    KFALSE    shift, and go to state 46
    KNOT      shift, and go to state 47
    '('       shift, and go to state 48

    exp  go to state 49


state 22

   34 variable: KIDENT .
   35         | KIDENT . '[' exp ']'
   36 proc_stmt: KIDENT .
   37          | KIDENT . '(' exp_list ')'

    '['  shift, and go to state 50
    '('  shift, and go to state 51

    KASSIGN   reduce using rule 34 (variable)
    $default  reduce using rule 36 (proc_stmt)


state 23

   31 stmt: KIF . exp KTHEN stmt
   32     | KIF . exp KTHEN stmt KELSE stmt

    KIDENT    shift, and go to state 42
    KINTNUM   shift, and go to state 43
    KREALNUM  shift, and go to state 44
    KTRUE     shift, and go to state 45
    KFALSE    shift, and go to state 46
    KNOT      shift, and go to state 47
    '('       shift, and go to state 48

    exp  go to state 52


state 24

   30 stmt: comp_stmt .

    $default  reduce using rule 30 (stmt)


state 25

   23 comp_stmt: KBEGIN optional_stmts . KEND

    KEND  shift, and go to state 53


state 26

   24 optional_stmts: stmt_list .
   27 stmt_list: stmt_list . ';' stmt

    ';'  shift, and go to state 54

    $default  reduce using rule 24 (optional_stmts)


state 27

   26 stmt_list: stmt .

    $default  reduce using rule 26 (stmt_list)


state 28

   28 stmt: variable . KASSIGN exp

    KASSIGN  shift, and go to state 55


state 29

   29 stmt: proc_stmt .

    $default  reduce using rule 29 (stmt)


state 30

   11 sub_declarations: sub_declarations sub_dec ';' .

    $default  reduce using rule 11 (sub_declarations)


state 31

   14 sub_dec: sub_head @1 . local_dec comp_stmt

    $default  reduce using rule 22 (local_dec)

    local_dec  go to state 56


state 32

    8 std_type: KINT .

    $default  reduce using rule 8 (std_type)


state 33

    9 std_type: KREAL .

    $default  reduce using rule 9 (std_type)


state 34

   10 std_type: KBOOL .

    $default  reduce using rule 10 (std_type)


state 35

    7 type: KARRAY . '[' KINTNUM '..' KINTNUM ']' KOF std_type

    '['  shift, and go to state 57


state 36

    2 declarations: declarations KVAR ident_list ':' type . ';'

    ';'  shift, and go to state 58


state 37

    6 type: std_type .

    $default  reduce using rule 6 (type)


state 38

    5 ident_list: ident_list ',' KIDENT .

    $default  reduce using rule 5 (ident_list)


state 39

   17 args: '(' . param_list ')'

    KIDENT  shift, and go to state 9

    ident_list  go to state 59
    param_list  go to state 60


state 40

   15 sub_head: KFUNC KIDENT args . ':' std_type ';'

    ':'  shift, and go to state 61


state 41

   16 sub_head: KPROC KIDENT args . ';'

    ';'  shift, and go to state 62


state 42

   40 exp: KIDENT .
   45    | KIDENT . '(' exp_list ')'

    '('  shift, and go to state 63

    $default  reduce using rule 40 (exp)


state 43

   41 exp: KINTNUM .

    $default  reduce using rule 41 (exp)


state 44

   42 exp: KREALNUM .

    $default  reduce using rule 42 (exp)


state 45

   43 exp: KTRUE .

    $default  reduce using rule 43 (exp)


state 46

   44 exp: KFALSE .

    $default  reduce using rule 44 (exp)


state 47

   48 exp: KNOT . exp

    KIDENT    shift, and go to state 42
    KINTNUM   shift, and go to state 43
    KREALNUM  shift, and go to state 44
    KTRUE     shift, and go to state 45
    KFALSE    shift, and go to state 46
    KNOT      shift, and go to state 47
    '('       shift, and go to state 48

    exp  go to state 64


state 48

   46 exp: '(' . exp ')'

    KIDENT    shift, and go to state 42
    KINTNUM   shift, and go to state 43
    KREALNUM  shift, and go to state 44
    KTRUE     shift, and go to state 45
    KFALSE    shift, and go to state 46
    KNOT      shift, and go to state 47
    '('       shift, and go to state 48

    exp  go to state 65


state 49

   33 stmt: KWHILE exp . KDO stmt
   47 exp: exp . binOp exp

    KDO      shift, and go to state 66
    KMOD     shift, and go to state 67
    KOR      shift, and go to state 68
    KAND     shift, and go to state 69
    KGT      shift, and go to state 70
    KLT      shift, and go to state 71
    KGE      shift, and go to state 72
    KLE      shift, and go to state 73
    KET      shift, and go to state 74
    KNE      shift, and go to state 75
    KMULT    shift, and go to state 76
    KADD     shift, and go to state 77
    KSUB     shift, and go to state 78
    KDIVIDE  shift, and go to state 79

    binOp  go to state 80


state 50

   35 variable: KIDENT '[' . exp ']'

    KIDENT    shift, and go to state 42
    KINTNUM   shift, and go to state 43
    KREALNUM  shift, and go to state 44
    KTRUE     shift, and go to state 45
    KFALSE    shift, and go to state 46
    KNOT      shift, and go to state 47
    '('       shift, and go to state 48

    exp  go to state 81


state 51

   37 proc_stmt: KIDENT '(' . exp_list ')'

    KIDENT    shift, and go to state 42
    KINTNUM   shift, and go to state 43
    KREALNUM  shift, and go to state 44
    KTRUE     shift, and go to state 45
    KFALSE    shift, and go to state 46
    KNOT      shift, and go to state 47
    '('       shift, and go to state 48

    exp_list  go to state 82
    exp       go to state 83


state 52

   31 stmt: KIF exp . KTHEN stmt
   32     | KIF exp . KTHEN stmt KELSE stmt
   47 exp: exp . binOp exp

    KTHEN    shift, and go to state 84
    KMOD     shift, and go to state 67
    KOR      shift, and go to state 68
    KAND     shift, and go to state 69
    KGT      shift, and go to state 70
    KLT      shift, and go to state 71
    KGE      shift, and go to state 72
    KLE      shift, and go to state 73
    KET      shift, and go to state 74
    KNE      shift, and go to state 75
    KMULT    shift, and go to state 76
    KADD     shift, and go to state 77
    KSUB     shift, and go to state 78
    KDIVIDE  shift, and go to state 79

    binOp  go to state 80


state 53

   23 comp_stmt: KBEGIN optional_stmts KEND .

    $default  reduce using rule 23 (comp_stmt)


state 54

   27 stmt_list: stmt_list ';' . stmt

    KWHILE  shift, and go to state 21
    KIDENT  shift, and go to state 22
    KBEGIN  shift, and go to state 13
    KIF     shift, and go to state 23

    comp_stmt  go to state 24
    stmt       go to state 85
    variable   go to state 28
    proc_stmt  go to state 29


state 55

   28 stmt: variable KASSIGN . exp

    KIDENT    shift, and go to state 42
    KINTNUM   shift, and go to state 43
    KREALNUM  shift, and go to state 44
    KTRUE     shift, and go to state 45
    KFALSE    shift, and go to state 46
    KNOT      shift, and go to state 47
    '('       shift, and go to state 48

    exp  go to state 86


state 56

   14 sub_dec: sub_head @1 local_dec . comp_stmt
   21 local_dec: local_dec . KVAR ident_list ':' type ';'

    KVAR    shift, and go to state 87
    KBEGIN  shift, and go to state 13

    comp_stmt  go to state 88


state 57

    7 type: KARRAY '[' . KINTNUM '..' KINTNUM ']' KOF std_type

    KINTNUM  shift, and go to state 89


state 58

    2 declarations: declarations KVAR ident_list ':' type ';' .

    $default  reduce using rule 2 (declarations)


state 59

    5 ident_list: ident_list . ',' KIDENT
   19 param_list: ident_list . ':' type

    ':'  shift, and go to state 90
    ','  shift, and go to state 18


state 60

   17 args: '(' param_list . ')'
   20 param_list: param_list . ';' ident_list ':' type

    ';'  shift, and go to state 91
    ')'  shift, and go to state 92


state 61

   15 sub_head: KFUNC KIDENT args ':' . std_type ';'

    KINT   shift, and go to state 32
    KREAL  shift, and go to state 33
    KBOOL  shift, and go to state 34

    std_type  go to state 93


state 62

   16 sub_head: KPROC KIDENT args ';' .

    $default  reduce using rule 16 (sub_head)


state 63

   45 exp: KIDENT '(' . exp_list ')'

    KIDENT    shift, and go to state 42
    KINTNUM   shift, and go to state 43
    KREALNUM  shift, and go to state 44
    KTRUE     shift, and go to state 45
    KFALSE    shift, and go to state 46
    KNOT      shift, and go to state 47
    '('       shift, and go to state 48

    exp_list  go to state 94
    exp       go to state 83


state 64

   47 exp: exp . binOp exp
   48    | KNOT exp .

    KMOD     shift, and go to state 67
    KGT      shift, and go to state 70
    KLT      shift, and go to state 71
    KGE      shift, and go to state 72
    KLE      shift, and go to state 73
    KET      shift, and go to state 74
    KNE      shift, and go to state 75
    KMULT    shift, and go to state 76
    KADD     shift, and go to state 77
    KSUB     shift, and go to state 78
    KDIVIDE  shift, and go to state 79

    $default  reduce using rule 48 (exp)

    binOp  go to state 80


state 65

   46 exp: '(' exp . ')'
   47    | exp . binOp exp

    KMOD     shift, and go to state 67
    KOR      shift, and go to state 68
    KAND     shift, and go to state 69
    KGT      shift, and go to state 70
    KLT      shift, and go to state 71
    KGE      shift, and go to state 72
    KLE      shift, and go to state 73
    KET      shift, and go to state 74
    KNE      shift, and go to state 75
    KMULT    shift, and go to state 76
    KADD     shift, and go to state 77
    KSUB     shift, and go to state 78
    KDIVIDE  shift, and go to state 79
    ')'      shift, and go to state 95

    binOp  go to state 80


state 66

   33 stmt: KWHILE exp KDO . stmt

    KWHILE  shift, and go to state 21
    KIDENT  shift, and go to state 22
    KBEGIN  shift, and go to state 13
    KIF     shift, and go to state 23

    comp_stmt  go to state 24
    stmt       go to state 96
    variable   go to state 28
    proc_stmt  go to state 29


state 67

   53 binOp: KMOD .

    $default  reduce using rule 53 (binOp)


state 68

   61 binOp: KOR .

    $default  reduce using rule 61 (binOp)


state 69

   60 binOp: KAND .

    $default  reduce using rule 60 (binOp)


state 70

   54 binOp: KGT .

    $default  reduce using rule 54 (binOp)


state 71

   56 binOp: KLT .

    $default  reduce using rule 56 (binOp)


state 72

   55 binOp: KGE .

    $default  reduce using rule 55 (binOp)


state 73

   57 binOp: KLE .

    $default  reduce using rule 57 (binOp)


state 74

   58 binOp: KET .

    $default  reduce using rule 58 (binOp)


state 75

   59 binOp: KNE .

    $default  reduce using rule 59 (binOp)


state 76

   51 binOp: KMULT .

    $default  reduce using rule 51 (binOp)


state 77

   49 binOp: KADD .

    $default  reduce using rule 49 (binOp)


state 78

   50 binOp: KSUB .

    $default  reduce using rule 50 (binOp)


state 79

   52 binOp: KDIVIDE .

    $default  reduce using rule 52 (binOp)


state 80

   47 exp: exp binOp . exp

    KIDENT    shift, and go to state 42
    KINTNUM   shift, and go to state 43
    KREALNUM  shift, and go to state 44
    KTRUE     shift, and go to state 45
    KFALSE    shift, and go to state 46
    KNOT      shift, and go to state 47
    '('       shift, and go to state 48

    exp  go to state 97


state 81

   35 variable: KIDENT '[' exp . ']'
   47 exp: exp . binOp exp

    KMOD     shift, and go to state 67
    KOR      shift, and go to state 68
    KAND     shift, and go to state 69
    KGT      shift, and go to state 70
    KLT      shift, and go to state 71
    KGE      shift, and go to state 72
    KLE      shift, and go to state 73
    KET      shift, and go to state 74
    KNE      shift, and go to state 75
    KMULT    shift, and go to state 76
    KADD     shift, and go to state 77
    KSUB     shift, and go to state 78
    KDIVIDE  shift, and go to state 79
    ']'      shift, and go to state 98

    binOp  go to state 80


state 82

   37 proc_stmt: KIDENT '(' exp_list . ')'
   39 exp_list: exp_list . ',' exp

    ','  shift, and go to state 99
    ')'  shift, and go to state 100


state 83

   38 exp_list: exp .
   47 exp: exp . binOp exp

    KMOD     shift, and go to state 67
    KOR      shift, and go to state 68
    KAND     shift, and go to state 69
    KGT      shift, and go to state 70
    KLT      shift, and go to state 71
    KGE      shift, and go to state 72
    KLE      shift, and go to state 73
    KET      shift, and go to state 74
    KNE      shift, and go to state 75
    KMULT    shift, and go to state 76
    KADD     shift, and go to state 77
    KSUB     shift, and go to state 78
    KDIVIDE  shift, and go to state 79

    $default  reduce using rule 38 (exp_list)

    binOp  go to state 80


state 84

   31 stmt: KIF exp KTHEN . stmt
   32     | KIF exp KTHEN . stmt KELSE stmt

    KWHILE  shift, and go to state 21
    KIDENT  shift, and go to state 22
    KBEGIN  shift, and go to state 13
    KIF     shift, and go to state 23

    comp_stmt  go to state 24
    stmt       go to state 101
    variable   go to state 28
    proc_stmt  go to state 29


state 85

   27 stmt_list: stmt_list ';' stmt .

    $default  reduce using rule 27 (stmt_list)


state 86

   28 stmt: variable KASSIGN exp .
   47 exp: exp . binOp exp

    KMOD     shift, and go to state 67
    KOR      shift, and go to state 68
    KAND     shift, and go to state 69
    KGT      shift, and go to state 70
    KLT      shift, and go to state 71
    KGE      shift, and go to state 72
    KLE      shift, and go to state 73
    KET      shift, and go to state 74
    KNE      shift, and go to state 75
    KMULT    shift, and go to state 76
    KADD     shift, and go to state 77
    KSUB     shift, and go to state 78
    KDIVIDE  shift, and go to state 79

    $default  reduce using rule 28 (stmt)

    binOp  go to state 80


state 87

   21 local_dec: local_dec KVAR . ident_list ':' type ';'

    KIDENT  shift, and go to state 9

    ident_list  go to state 102


state 88

   14 sub_dec: sub_head @1 local_dec comp_stmt .

    $default  reduce using rule 14 (sub_dec)


state 89

    7 type: KARRAY '[' KINTNUM . '..' KINTNUM ']' KOF std_type

    '..'  shift, and go to state 103


state 90

   19 param_list: ident_list ':' . type

    KINT    shift, and go to state 32
    KREAL   shift, and go to state 33
    KBOOL   shift, and go to state 34
    KARRAY  shift, and go to state 35

    type      go to state 104
    std_type  go to state 37


state 91

   20 param_list: param_list ';' . ident_list ':' type

    KIDENT  shift, and go to state 9

    ident_list  go to state 105


state 92

   17 args: '(' param_list ')' .

    $default  reduce using rule 17 (args)


state 93

   15 sub_head: KFUNC KIDENT args ':' std_type . ';'

    ';'  shift, and go to state 106


state 94

   39 exp_list: exp_list . ',' exp
   45 exp: KIDENT '(' exp_list . ')'

    ','  shift, and go to state 99
    ')'  shift, and go to state 107


state 95

   46 exp: '(' exp ')' .

    $default  reduce using rule 46 (exp)


state 96

   33 stmt: KWHILE exp KDO stmt .

    $default  reduce using rule 33 (stmt)


state 97

   47 exp: exp . binOp exp
   47    | exp binOp exp .

    $default  reduce using rule 47 (exp)

    binOp  go to state 80


state 98

   35 variable: KIDENT '[' exp ']' .

    $default  reduce using rule 35 (variable)


state 99

   39 exp_list: exp_list ',' . exp

    KIDENT    shift, and go to state 42
    KINTNUM   shift, and go to state 43
    KREALNUM  shift, and go to state 44
    KTRUE     shift, and go to state 45
    KFALSE    shift, and go to state 46
    KNOT      shift, and go to state 47
    '('       shift, and go to state 48

    exp  go to state 108


state 100

   37 proc_stmt: KIDENT '(' exp_list ')' .

    $default  reduce using rule 37 (proc_stmt)


state 101

   31 stmt: KIF exp KTHEN stmt .
   32     | KIF exp KTHEN stmt . KELSE stmt

    KELSE  shift, and go to state 109

    $default  reduce using rule 31 (stmt)


state 102

    5 ident_list: ident_list . ',' KIDENT
   21 local_dec: local_dec KVAR ident_list . ':' type ';'

    ':'  shift, and go to state 110
    ','  shift, and go to state 18


state 103

    7 type: KARRAY '[' KINTNUM '..' . KINTNUM ']' KOF std_type

    KINTNUM  shift, and go to state 111


state 104

   19 param_list: ident_list ':' type .

    $default  reduce using rule 19 (param_list)


state 105

    5 ident_list: ident_list . ',' KIDENT
   20 param_list: param_list ';' ident_list . ':' type

    ':'  shift, and go to state 112
    ','  shift, and go to state 18


state 106

   15 sub_head: KFUNC KIDENT args ':' std_type ';' .

    $default  reduce using rule 15 (sub_head)


state 107

   45 exp: KIDENT '(' exp_list ')' .

    $default  reduce using rule 45 (exp)


state 108

   39 exp_list: exp_list ',' exp .
   47 exp: exp . binOp exp

    KMOD     shift, and go to state 67
    KOR      shift, and go to state 68
    KAND     shift, and go to state 69
    KGT      shift, and go to state 70
    KLT      shift, and go to state 71
    KGE      shift, and go to state 72
    KLE      shift, and go to state 73
    KET      shift, and go to state 74
    KNE      shift, and go to state 75
    KMULT    shift, and go to state 76
    KADD     shift, and go to state 77
    KSUB     shift, and go to state 78
    KDIVIDE  shift, and go to state 79

    $default  reduce using rule 39 (exp_list)

    binOp  go to state 80


state 109

   32 stmt: KIF exp KTHEN stmt KELSE . stmt

    KWHILE  shift, and go to state 21
    KIDENT  shift, and go to state 22
    KBEGIN  shift, and go to state 13
    KIF     shift, and go to state 23

    comp_stmt  go to state 24
    stmt       go to state 113
    variable   go to state 28
    proc_stmt  go to state 29


state 110

   21 local_dec: local_dec KVAR ident_list ':' . type ';'

    KINT    shift, and go to state 32
    KREAL   shift, and go to state 33
    KBOOL   shift, and go to state 34
    KARRAY  shift, and go to state 35

    type      go to state 114
    std_type  go to state 37


state 111

    7 type: KARRAY '[' KINTNUM '..' KINTNUM . ']' KOF std_type

    ']'  shift, and go to state 115


state 112

   20 param_list: param_list ';' ident_list ':' . type

    KINT    shift, and go to state 32
    KREAL   shift, and go to state 33
    KBOOL   shift, and go to state 34
    KARRAY  shift, and go to state 35

    type      go to state 116
    std_type  go to state 37


state 113

   32 stmt: KIF exp KTHEN stmt KELSE stmt .

    $default  reduce using rule 32 (stmt)


state 114

   21 local_dec: local_dec KVAR ident_list ':' type . ';'

    ';'  shift, and go to state 117


state 115

    7 type: KARRAY '[' KINTNUM '..' KINTNUM ']' . KOF std_type

    KOF  shift, and go to state 118


state 116

   20 param_list: param_list ';' ident_list ':' type .

    $default  reduce using rule 20 (param_list)


state 117

   21 local_dec: local_dec KVAR ident_list ':' type ';' .

    $default  reduce using rule 21 (local_dec)


state 118

    7 type: KARRAY '[' KINTNUM '..' KINTNUM ']' KOF . std_type

    KINT   shift, and go to state 32
    KREAL  shift, and go to state 33
    KBOOL  shift, and go to state 34

    std_type  go to state 119


state 119

    7 type: KARRAY '[' KINTNUM '..' KINTNUM ']' KOF std_type .

    $default  reduce using rule 7 (type)
